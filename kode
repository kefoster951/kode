#!/bin/env bash

#**************************************************#
#                                                  #
#   kode v3.0                                      #
#   A bash script to                               #
#   -> Add shebang                                 #
#   -> Add info header                             #
#   -> Make code executable                        #
#   -> Update Last updated column in info header   #
#                                                  #
#   Author : https://github.com/laraib07           #
#                                                  #
#   Supported languages :                          #
#   bash, c, c++, c#, css, java,                   #
#   javascript, perl, php, python,                 #
#   ruby, rust, swift, typescript.                 #
#                                                  #
#**************************************************#


#colors and variables
R='\033[1;31m'
G='\033[1;32m'
W='\033[1;37m'
OFF='\033[0m'
DATE=$(date '+%a %d %b %y  %R:%S')
CONFIG_FILE="$HOME/.kodeconfig"


# checking config file
if ! [[ -f $CONFIG_FILE ]]
then
    touch $CONFIG_FILE
    echo 'AUTHOR="Set name with -a"'> $CONFIG_FILE
    echo 'TXT_EDITOR=nano' >> $CONFIG_FILE
    echo 'DEFAULT_EDITOR="vi"' >> $CONFIG_FILE
fi

# sourcing config file
source $CONFIG_FILE

# checking if txt_editor is valid
# if not use default editor
which ${TXT_EDITOR} &> /dev/null || TXT_EDITOR="$DEFAULT_EDITOR"


header_template()
{
    FORMAT="%-16s %-30s %s\n"
    printf "************************************************#\n"
    printf "#%-49s#\n"
    printf "$FORMAT" "#  Project title :"  "$1" '#'
    printf "$FORMAT" "#  Author        :"  "${AUTHOR}" '#'
    printf "$FORMAT" "#  Date          :"  "${DATE}" '#'
    printf "$FORMAT" "#  Last modified :"  "${DATE}" '#'
    printf "$FORMAT" "#  Notes         :"  "" '#'
    printf "$FORMAT" "#  Description   :"  "" '#'
    printf "#%-49s#\n"
    printf "#************************************************"

}


insert_shebang_header()
{
    # checking if shebang required
    if [[ "$1" =~ \.(pl|py|rb|sh)$ ]]
    then
        # checking environment
        [[ "$1" =~ \.pl$ ]] && environment=perl
        [[ "$1" =~ \.py$ ]] && environment=python3
        [[ "$1" =~ \.rb$ ]] && environment=ruby
        [[ "$1" =~ \.sh$ ]] && environment=bash

        # appending shebang
        echo -e "#!$(which env) $environment\n" >> $1
        # appending header template
        echo -e "#*$(header_template $1)*#\n" >> $1

    elif [[ "$1" =~ \.(c|cpp|cs|css|java|js|php|rs|swift|ts)$ ]]
    then
        # shebang not requied
        # appending header template only
        echo -e "/*$(header_template $1)*/\n" >> $1

    fi
}


set_author()
{
    echo -e "\033[?47h\n"   # use alternate screen
    clear
    echo -e "\n${R} ≫${W} Enter author's name :${OFF} \c"
    read AUTHOR_NAME

    AUTHOR_NAME=$(printf "%.30s" "$AUTHOR_NAME")

    # replacing author name in kodeconfig file
    sed -i "0,/^AUTHOR.*/{s//AUTHOR=\"${AUTHOR_NAME}\"/}" $CONFIG_FILE

    echo -e "${G} ≫${W} Author name $AUTHOR_NAME set successfully."
    sleep 2
    echo -e "\033[?47l\c"   # Restore normal screen
}


set_text_editor()
{
    echo -e "\033[?47h\r"   # use alternate screen
    clear

    while true
    do
        echo -e "\n${R} ≫${W} Enter text editor :${OFF} \c"
        read REPLY

        which $REPLY &> /dev/null
        if [ $? -eq 0 ]
        then
            # replacing editor in kodeconfig file
            sed -i "0,/^TXT_EDITOR.*/{s//TXT_EDITOR=${REPLY}/}" $CONFIG_FILE

            echo -e "${G} ≫${W} $REPLY set successfully."
            sleep 2
            break

        else
            echo -e "${R} ≫ Error${W} : $REPLY not found" >&2
            echo -e "   Try again"
            sleep 2
            clear

        fi

    done

    echo -e "\033[?47l\c"   # Restore normal screen
}


update_last_modified()
{
    REPLACE_WITH=$(printf "$FORMAT" "#  Last modified" ':'  "${DATE}" '#')

    # update first occurrence of last modified
    sed -i "0,/^#  Last modified.*/{s//${REPLACE_WITH}/}" ${1}
}


file_exists()
{
    md5sum1="$(printf "%.33s" $(md5sum $1))"

    $TXT_EDITOR "$1"

    md5sum2="$(printf "%.33s" $(md5sum $1))"

    if [[ $new == "true" && "$md5sum1" == "$md5sum2" ]]
    then
        rm -f $1

    elif [[ "$md5sum1" != "$md5sum2" ]]
    then
        update_last_modified $1

    fi
}


is_new_file()
{
    touch "$1"
    chmod u+x $1  # making file executable

    insert_shebang_header $1 # inserting shebang and header

    new="true"
    file_exists $1
}


help()
{
    echo -e "Usage : ${W}kode${OFF} [option] [file...]"
    echo -e " -h    --help      Print help"
    echo -e " -v    --version   Print version"
    echo -e " -a    --author    Set author name"
    echo -e " -e    --editor    Set editor"
}


version()
{
    echo "kode v3.0"
    echo "A bash script to"
    echo "-> Add shebang"
    echo "-> Add info header"
    echo "-> Make code executable"
    echo "-> Update Last updated column in info header"
    echo
    echo "Author : https://github.com/laraib07"
    echo
    echo "Supported languages : "
    echo "bash, c, c++, c#, css, java, "
    echo "javascript, perl, php, python, "
    echo "ruby, rust, swift, typescript."
}


# if no argument provided
if [[ -z "$1" ]]
then
    echo "No argument provided."
    echo "Provide atleast one argument."
fi


# Driver Code
while [[ -n "$1" ]]
do
    case $1 in
        "-h" | "--help" )
            help ;;

        "-v" | "--version" )
            version ;;

        "-a" | "--author" )
            set_author ;;

        "-e" | "--editor" )
            set_text_editor ;;

        [!-]* )
            if [[ -f "$1" ]]; then
                file_exists $1
            else
                is_new_file  $1
            fi
            ;;

        * )
            echo "$1 is Invalid Option" >&2
            echo "Try \"-h\" or \"--help\" for Help!"
            echo
    esac
    shift
done

exit 0
