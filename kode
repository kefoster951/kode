#!/bin/env bash

#************************************************#
#                                                #
#   kode v1.0                                    #
#   A bash script to add header in your code.    #
#   Author : https://github.com/laraib07         #
#                                                #
#************************************************#

#variable
AUTHOR="Laraib"
TXT_EDITOR=vim
DEFULT_TXT_EDITOR="nano"

#colors
R='\033[1;31m'
G='\033[1;32m'
W='\033[1;37m'
off='\033[0m'


header()
{
        printf "************************************************#\n"
        printf "#%-49s#\n" 
        printf "%-16s %s %-30s %s\n" "#  Project title" ':'  $1 '#'
        printf "%-16s %s %-30s %s\n" "#  Author" ':' "${AUTHOR}" '#'
        printf "%-16s %s %-30s %s\n" "#  Date" ':'  "$(date  '+%a %d %b %y   %r')" '#'
        printf "%-16s %s %-30s %s\n" "#  Last modified" ':'  "$(date  '+%a %d %b %y   %r')" '#'
        printf "%-16s %s %-30s %s\n" "#  Notes" ":" ""  '#'
        printf "%-16s %s %-30s %s\n" "#  Description" ':' "" '#'
        printf "#%-49s#\n"
        printf "#************************************************"

}

shebang_or_cheader()
{
        if [[ "$1" =~ \.sh$ || "$1" =~ \.py$ ]]
        then
                environment=$( [[ "$1" =~ .\.py$ ]] && echo python3 || echo bash )
                echo -e "#!$(which env) $environment\n" >> $1
                echo -e "#*$(header $1)*#\n" >> $1

        elif [[ "$1" =~ \.cpp$ ]]
        then
                echo -e "#include <bits/stdc++.h>\n" >> $1
                echo -e "/*$(header $1)*/\n" >> $1

        elif [[ "$1" =~ \.c$ ]]
        then
                echo -e "#include <stdio.h>\n" >> $1
                echo -e "/*$(header $1)*/\n" >> $1

        fi
}


set_author()
{
        clear
        echo -e "\n${R} ≫${W} Enter author's name :${off} \c"
        read AUTHOR_NAME

        AUTHOR_NAME=$(printf "%.30s" "$AUTHOR_NAME")
        sed -i "0,/^AUTHOR.*/{s//AUTHOR=\"${AUTHOR_NAME}\"/}" ${0}
        echo -e "${G} ≫${W} Author name $AUTHOR_NAME set successfully."
}

set_text_editor()
{
        false
        while [ $? -gt 0 ]
        do
                clear
                echo -e "\n${R} ≫${W} Enter text editor :${off} \c"
                read 

                which $REPLY > /dev/null
                if [ $? -gt 0 ];then
                        echo -e "${R} ≫ error${W} : $REPLY not found" >&2
                        echo -ne "   try again\r"
                        sleep 2

                else
                        sed -i "0,/^TXT_EDITOR.*/{s//TXT_EDITOR=${REPLY}/}" ${0}
                        echo -e "${G} ≫${W} $REPLY set successfully."

                fi
                which $REPLY > /dev/null
        done
}



update_last_modified()
{
        replace_with=$(printf "%-16s %s %-30s %s\n" "#  Last modified" ':'  "$(date  '+%a %d %b %y   %r')" '#')
        #update first occurrence of last modified 
        sed -i "0,/^#  Last modified.*/{s//${replace_with}/}" ${1}
}

file_exist()
{
        md5sum1="$(printf "%.33s" $(md5sum $1))"

        $TXT_EDITOR "$1"

        md5sum2="$(printf "%.33s" $(md5sum $1))"

        if [[ "$md5sum1" != "$md5sum2" ]]
        then
                update_last_modified $1
        fi
}

new_file()
{
        touch "$1"
        chmod u+x $1
        shebang_or_cheader $1

        md5sum1="$(printf "%.33s" $(md5sum $1))"
        $TXT_EDITOR $1
        md5sum2="$(printf "%.33s" $(md5sum $1))"

        if [[ "$md5sum1" == "$md5sum2" ]]
        then
                rm -f  $1
        fi
}

help()
{
        echo -e "Usage : ${W}kode${off} [option] [file...]"
        echo -e " -h    --help      Print help"
        echo -e " -v    --version   Print version"
        echo -e " -a    --author    Set author name"
}

version()
{
        echo "kode v1.0"
        echo "A bash script to add header in your codes"
        echo "Author : https://github.com/laraib07"
}


#checking if txt_editor is valid -> if not use default
which ${TXT_EDITOR} > /dev/null
if [ $? -gt 0 ]
then
        TXT_EDITOR="$DEFAULT_TXT_EDITOR"
fi

#driver code
while [[ -n "$1" ]]
do
        case $1 in
                "-h" | "--help" )
                        help ;;

                "-v" | "--version" )
                        version ;;

                "-a" | "--author" )
                        set_author ;;

                "-e" | "--editor" )
                        set_text_editor ;;

                [!-]* )
                        [[ -f "$1" ]] && file_exist $1

                        ! [[ -f "$1" ]] && new_file  $1
                        ;;

                * )
                        echo "$1 is Invalid Option" >&2
                        echo "Try \"-h\" or \"--help\" for Help!"
                        echo
        esac
        shift
done

exit 0
